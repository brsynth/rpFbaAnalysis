name: Docker

on:   
    workflow_run:
        workflows: [Tests]
        types: [completed]
        branches: [stable]

env:
  IMAGE_NAME: ghtoken_product_demo

jobs:

  Image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Download Artifact Package - Pip'
        uses: actions/download-artifact@v2
        with:
          name: package-pip-artifact
          path: ~/Downloads/Pip.zip
      - name: 'Unzip'
        run: |
          unzip ~/Downloads/*.zip
          mv ~/Downloads/*whl .
          rm -r ~/Downloads
      - name: 'Define Image name'
        run: |
          image_name=${{ github.repository }}
          image_name=$(echo $image_name | cut -f2 -d"/")
          echo "image_name=$image_name" >> $GITHUB_ENV
      - name: 'Build image'
        run: docker build . --file Dockerfile --tag ${{ env.image_name }} --label "runnumber=${GITHUB_RUN_ID}"
      - name: 'Log in to registry'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: 'Push image'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ env.image_name }}
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          echo "IMAGE_ID=$IMAGE_ID VERSION=$VERSION"
          docker tag ${{ env.image_name }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
